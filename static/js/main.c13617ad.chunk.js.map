{"version":3,"sources":["logo.svg","services/PruebaChiCuadrado.js","services/PruebaKS.js","services/Generadores.js","pages/TP3.js","App.js","reportWebVitals.js","index.js"],"names":["PruebaChiCuadrado","numIntervalos","muestra","generador","confianza","calcularChiCuadrado","length","paso","i","min","parseFloat","toFixed","max","mc","data","push","calcularColumnas","getLimites","minLimite","contarFrecuenciaMuestra","counter","calcularFrecuenciaEsperada","x","intervaloLength","densidad","getDensidad","fo","fe","Math","abs","col1","col2","pow","col3","c","getGradosDeLibertad","verificarChiCuadrado","this","PruebaKS","calcularsKS","pfo","pfe","pfo_ac","pfe_ac","resta_probabilidades_acumuladas","maximo_resta","Uniforme","a","b","k","calcularRandom","random","getMedia","getVarianza","getGradosLibertad","Exponencial","lambda","log","E","Normal","media","desviacion","sqrt","PI","NormalBoxMuller","convolucion","r1","r2","cos","sin","NormalConvolucion","generarDatosMuestraUniforme","muestraUniforme","sumatoriaMuestraUniforme","index","numAleatorio","sumatoria","Poisson","p","factorialize","num","TP3","useState","setK","n","setN","setMuestra","chiInstance","setChiInstance","pruebaKSInstance","setPruebaKSInstance","rows","setRows","ksRows","setKSrows","chartData","setChartData","generatorType","setGeneratorType","setA","setB","setMedia","setDesviacion","setLambda","generadorInstance","setGeneradorInstance","useEffect","chi","ks","aux","randomNumber","generarMuestra","auxChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","forEach","row","style","width","display","verticalAlign","textAlign","type","value","onChange","e","Number","parseInt","target","marginLeft","isNaN","disabled","map","item","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c13617ad.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","class PruebaChiCuadrado{\n    constructor(numIntervalos, muestra, generador ,confianza=0.95){\n        this.numIntervalos=numIntervalos;\n        this.muestra = muestra;\n        this.confianza = confianza;\n        this.generador = generador;\n        this.data = [];\n    }\n\n    calcularChiCuadrado = () => {\n        if (!this.generador && this.muestra.length>0){\n            const paso = 1/this.numIntervalos;\n            for(let i=0;i<this.numIntervalos;i++){\n                const min = parseFloat((i*paso).toFixed(4));\n                const max = parseFloat(((i+1)*paso).toFixed(4));\n                const mc = parseFloat(((min+max)/2).toFixed(4));\n                this.data.push({\n                    min,\n                    max,\n                    mc,\n                    ...this.calcularColumnas(max,min,mc,i)\n                })\n            }\n        } else if(this.generador && this.muestra.length){\n            const [minLimite,maxLimite] = this.generador.getLimites(this.muestra);\n            const paso = (maxLimite-minLimite)/this.numIntervalos;\n            for(let i=0;i<this.numIntervalos;i++){\n                let min = null;\n                if (i===0) {\n                    min = parseFloat((minLimite).toFixed(4));\n                } else {\n                    min = this.data[i-1].max;\n                }\n                const max = parseFloat((min+paso).toFixed(4));\n                const mc = parseFloat(((min+max)/2).toFixed(4));\n                this.data.push({\n                    min,\n                    max,\n                    mc,\n                    ...this.calcularColumnas(max,min,mc,i)\n                })\n            }\n        } else {\n            this.data = [];\n        }\n    }\n\n    contarFrecuenciaMuestra = (min,max) => {\n        let counter = 0;\n        for(let i=0;i<this.muestra.length;i++){\n            if(this.muestra[i]>=min && this.muestra[i]<max){\n                counter+=1;\n            }\n        }\n        return counter;\n    }\n\n    calcularFrecuenciaEsperada = (x,intervaloLength)=>{\n        if (this.generador) {\n            const densidad = this.generador.getDensidad(x);\n            return parseFloat((densidad*intervaloLength*this.muestra.length).toFixed(4));\n        }\n        return parseFloat((this.muestra.length/this.numIntervalos).toFixed(4));\n    }\n\n    calcularColumnas = (max,min,mc,i) => {        \n        const fo = this.contarFrecuenciaMuestra(min,max);\n        const fe = Math.abs(this.calcularFrecuenciaEsperada(mc,max-min));\n        const col1 = parseFloat((fo-fe).toFixed(4));\n        const col2 = parseFloat((Math.pow(col1,2)).toFixed(4));\n        const col3 = fe!=0?parseFloat((col2/fe).toFixed(4)):0;\n        const c = i == 0 ? col3 : parseFloat((this.data[i-1].c+col3).toFixed(4));\n        return {fo,fe,col1,col2,col3,c}\n    }\n\n    getGradosDeLibertad = ()=>{\n        return this.numIntervalos-1;\n    }\n\n    verificarChiCuadrado = () => {\n        return {};\n    }  \n\n}\n\nexport {PruebaChiCuadrado}","class PruebaKS{\n    constructor(numIntervalos, muestra, generador ,confianza=0.95){\n        this.numIntervalos=numIntervalos;\n        this.muestra = muestra;\n        this.confianza = confianza;\n        this.generador = generador;\n        this.data = [];\n    }\n\n    calcularsKS = () => {\n        if (!this.generador && this.muestra.length>0){\n            const paso = 1/this.numIntervalos;\n            for(let i=0;i<this.numIntervalos;i++){\n                const min = parseFloat((i*paso).toFixed(4));\n                const max = parseFloat(((i+1)*paso).toFixed(4));\n                const mc = parseFloat(((min+max)/2).toFixed(4));\n                this.data.push({\n                    min,\n                    max,\n                    mc,\n                    ...this.calcularColumnas(max,min,mc,i)\n                })\n            }\n        } else if(this.generador && this.muestra.length){\n            const [minLimite,maxLimite] = this.generador.getLimites(this.muestra);\n            const paso = (maxLimite-minLimite)/this.numIntervalos;\n            for(let i=0;i<this.numIntervalos;i++){\n                let min = null;\n                if (i===0) {\n                    min = parseFloat((minLimite).toFixed(4));\n                } else {\n                    min = this.data[i-1].max;\n                }\n                const max = parseFloat((min+paso).toFixed(4));\n                const mc = parseFloat(((min+max)/2).toFixed(4));\n                this.data.push({\n                    min,\n                    max,\n                    mc,\n                    ...this.calcularColumnas(max,min,mc,i)\n                });\n            }\n        } else {\n            this.data = [];\n        }\n    }\n\n    contarFrecuenciaMuestra = (min,max) => {\n        let counter = 0;\n        for(let i=0;i<this.muestra.length;i++){\n            if(this.muestra[i]>=min && this.muestra[i]<max){\n                counter+=1;\n            }\n        }\n        return counter;\n    }\n\n    calcularFrecuenciaEsperada = (x,intervaloLength)=>{\n        if (this.generador) {\n            const densidad = this.generador.getDensidad(x);\n            return parseFloat((densidad*intervaloLength*this.muestra.length).toFixed(4));\n        }\n        return parseFloat((this.muestra.length/this.numIntervalos).toFixed(4));\n    }\n\n    calcularColumnas = (max,min,mc,i) => {        \n        const fo = this.contarFrecuenciaMuestra(min,max);\n        const fe = Math.abs(this.calcularFrecuenciaEsperada(mc,max-min));\n        const pfo = parseFloat((fo/this.muestra.length).toFixed(4));\n        const pfe = parseFloat((fe/this.muestra.length).toFixed(4));\n        const pfo_ac= parseFloat((pfo+ (i>0 ? this.data[i-1].pfo_ac : 0)).toFixed(4));\n        const pfe_ac = parseFloat((pfe+ (i>0 ? this.data[i-1].pfe_ac : 0)).toFixed(4));\n        const resta_probabilidades_acumuladas = parseFloat((Math.abs(pfo_ac-pfe_ac)).toFixed(4));\n        const maximo_resta = i==0 || resta_probabilidades_acumuladas > this.data[i-1].maximo_resta ? resta_probabilidades_acumuladas:this.data[i-1].maximo_resta;\n        return {fo,fe,pfo,pfe,pfo_ac,pfe_ac,resta_probabilidades_acumuladas,maximo_resta}\n    }\n\n    getGradosDeLibertad = ()=>{\n        return this.numIntervalos-1;\n    }\n\n    verificarChiCuadrado = () => {\n        return {};\n    }  \n\n}\n\nexport {PruebaKS}","class CongruencialMixto {\n    \n    constructor(x0,k,g,c){\n        this.a = this.calcularA(k);\n        this.m = this.calcularM(g);\n        this.c = c;\n        this.x0 = x0;\n    }\n\n    calcularA = k => {\n        return 4*k+1;\n    }\n\n    calcularM = g => {\n        return Math.pow(2,g);\n    }\n\n    calcularNextXi = (xi) => {\n        console.log(xi);\n        return (this.a*xi+this.c)%this.m;\n    }\n\n    calcularRandom = (xi) => {\n        return xi/(this.m-1);\n    }\n    \n    toString = ()=>{\n        return this.a+' '+this.m+' '+this.c;\n    }\n}\n\nclass CongruencialMultiplicativo {\n    \n    constructor(x0,k,g){\n        this.a = this.calcularA(k);\n        this.m = this.calcularM(g);\n        this.x0 = x0;\n    }\n\n    calcularA = k => {\n        return 8*k+3;\n    }\n\n    calcularM = g => {\n        return Math.pow(2,g);\n    }\n\n    calcularNextXi = (xi) => {\n        return (this.a*xi)%this.m;\n    }\n\n    calcularRandom = (xi) => {\n        return xi/(this.m-1);\n    }\n\n    toString = ()=>{\n        return this.a+' '+this.m;\n    }\n    \n}\n\nclass Uniforme {\n    constructor(a,b,k){\n        this.a=a;\n        this.b=b;\n        this.k=k;\n    }\n\n    calcularRandom = ()=>{\n        return parseFloat((this.a+Math.random()*(this.b-this.a)).toFixed(4));\n    }\n\n    getMedia = ()=>{\n        return parseFloat(((this.a+this.b)/2).toFixed(4));\n    }\n\n    getVarianza = ()=>{\n        return parseFloat((Math.pow(this.b-this.a,2)/12).toFixed(4));\n    }\n\n    getDensidad = ()=>{\n        return parseFloat((1/(this.b-this.a)).toFixed(4));\n    }\n\n    getLimites = (muestra)=>{\n        //return [this.a,this.b]\n        return [Math.min(...muestra), Math.max(...muestra)]\n    }\n\n    getGradosLibertad = ()=>{\n        return this.k-1;\n    }\n}\n\nclass Exponencial {\n    constructor(lambda,k){\n        this.lambda = lambda;\n        this.k = k;\n    }\n\n    calcularRandom = ()=>{\n        return parseFloat((-1/this.lambda)*Math.log(1-Math.random()).toFixed(4));\n    }\n\n    getMedia = () => {\n        return parseFloat((1/this.lambda).toFixed(4));\n    }\n\n    getVarianza = () => {\n        return parseFloat((1/Math.pow(this.lambda,2)).toFixed(4));\n    }\n\n    getDensidad = (x)=> {\n        return parseFloat((this.lambda*Math.pow(Math.E,(-1*this.lambda*x))).toFixed(4));\n    }\n\n    getLimites = (muestra)=>{\n        //return [0,1];\n        return [Math.min(...muestra), Math.max(...muestra)]\n    }\n\n    getGradosLibertad = ()=>{\n        return this.k-2;\n    }\n}\n\nclass Normal {\n    constructor(media,desviacion,k){\n        this.media = media;\n        this.desviacion = desviacion\n        this.k = k;\n    }    \n\n    getMedia = () => {\n        return this.media;\n    }\n\n    getVarianza = () => {\n        return parseFloat((Math.pow(this.desviacion,2)).toFixed(4));\n    }\n\n    getDensidad = (x)=> {\n        return parseFloat((1/(this.desviacion*Math.sqrt(2*Math.PI)))*Math.pow(Math.E,(-0.5*Math.pow((x-this.media)/this.desviacion,2))).toFixed(4));\n    }\n\n    getLimites = (muestra)=>{\n        return [Math.min(...muestra), Math.max(...muestra)]\n    }\n\n    getGradosLibertad = ()=>{\n        return this.k-3;\n    }\n\n}\n\nclass NormalBoxMuller extends Normal {    \n\n    calcularRandom = ()=>{\n        if(this.convolucion){\n            \n        }\n        const r1 = Math.random();\n        const r2 = Math.random();\n        const n1 = parseFloat((Math.sqrt(-2*Math.log(r1))*Math.cos(2*Math.PI*r2)*this.desviacion+this.media).toFixed(4));\n        const n2 = parseFloat((Math.sqrt(-2*Math.log(r1))*Math.sin(2*Math.PI*r2)*this.desviacion+this.media).toFixed(4));\n        return [n1,n2];\n    }\n}\nclass NormalConvolucion extends Normal {\n\n    generarDatosMuestraUniforme = ()=>{\n        let muestraUniforme = [];\n        let sumatoriaMuestraUniforme = 0;\n        for (let index = 0; index < 12; index++) {\n            const numAleatorio = Math.random()\n            muestraUniforme.push(numAleatorio);\n            sumatoriaMuestraUniforme+= numAleatorio         \n        }\n        return [muestraUniforme, sumatoriaMuestraUniforme];\n    }\n\n    calcularRandom = ()=>{\n        const [muestra, sumatoria] = this.generarDatosMuestraUniforme();\n        return parseFloat(((sumatoria-6)*this.desviacion+this.media).toFixed(4));\n    }\n\n}\nclass Poisson {\n    constructor(lambda,k){\n        this.lambda = lambda;\n        this.k = k;\n    }\n\n    calcularRandom = ()=>{\n        /*\n            P = 1;\n            X = -1;\n            A = e-λ;\n            Hacer\n            {\n            Generar U = RND(0,1);\n            P = P * U;\n            X = X + 1;\n            } mientras (P >= A);\n            Devolver X;\n        */\n       let p = 1;\n       let x = -1;\n       let a = Math.pow(Math.E,-1*this.lambda);\n       do {\n        const u = Math.random();\n        p = p*u;\n        x = x+1;\n       } while (p>=a);\n\n       return x;\n    }\n\n    getMedia = () => {\n        return parseFloat((this.lambda).toFixed(4));\n    }\n\n    getVarianza = () => {\n        return parseFloat((this.lambda).toFixed(4));\n    }\n\n    getDensidad = (x)=> {\n        return parseFloat(((Math.pow(this.lambda,x) * Math.pow(Math.E,-1*this.lambda))/ this.factorialize(x)).toFixed(4));\n    }\n\n    factorialize = (num) => {\n        if (num === 0 || num === 1)\n          return 1;\n        for (var i = num - 1; i >= 1; i--) {\n          num *= i;\n        }\n        return num;\n    }\n\n    getLimites = (muestra)=>{\n       return [Math.min(...muestra), Math.max(...muestra)]\n    }\n\n    getGradosLibertad = ()=>{\n        return this.k-2;\n    }\n}\n\nexport {\n    CongruencialMixto,\n    CongruencialMultiplicativo,\n    Uniforme,\n    Exponencial,\n    NormalBoxMuller,\n    NormalConvolucion,\n    Poisson,\n}","import {useState, useEffect} from 'react';\nimport { PruebaChiCuadrado } from '../services/PruebaChiCuadrado';\nimport { PruebaKS } from '../services/PruebaKS';\nimport { Uniforme, Exponencial, NormalBoxMuller, NormalConvolucion,Poisson } from '../services/Generadores';\nimport { Bar } from 'react-chartjs-2';\n\nconst TP3 = () => {\n    const [k,setK] = useState(10);\n    const [n,setN] = useState(0);\n    const [muestra,setMuestra] = useState([]);\n\n    const [chiInstance, setChiInstance] = useState();\n    const [pruebaKSInstance, setPruebaKSInstance] = useState()\n    const [rows,setRows] = useState([]);\n    const [ksRows, setKSrows] = useState([]);\n    const [chartData, setChartData] = useState({});\n\n\n    const [generatorType, setGeneratorType] = useState(1);\n\n    const [a, setA] = useState();\n    const [b, setB] = useState();\n    const [media, setMedia] = useState();\n    const [desviacion, setDesviacion] = useState();\n    const [lambda, setLambda] = useState();\n\n    const [generadorInstance, setGeneradorInstance] = useState(null);\n\n    const generarMuestra = () => {\n        const aux = [];        \n        if(generadorInstance){\n            if(generatorType===3){\n                for( let i= 0;i<n;i=i+2){\n                    const [r1,r2] = generadorInstance.calcularRandom();    \n                    aux.push(r1);\n                    aux.push(r2)\n                }\n            }else{\n                for( let i= 0;i<n;i++){\n                    const randomNumber = generadorInstance.calcularRandom();    \n                    aux.push(randomNumber);\n                }\n            }\n        }\n        return aux;\n    };\n\n    useEffect(()=>{\n        setN(0);\n        setChiInstance(null);\n        setPruebaKSInstance(null);\n        switch(generatorType) {\n            case 1:\n                if(a && b){\n                    setGeneradorInstance(new Uniforme(a,b,k));\n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            case 2:\n                if(lambda) {\n                    setGeneradorInstance(new Exponencial(lambda,k));                \n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            case 3:\n                if(media && desviacion) {\n                setGeneradorInstance(new NormalBoxMuller(media,desviacion,k));\n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            case 4:\n                if(lambda) {\n                    setGeneradorInstance(new Poisson(lambda,k));\n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            case 5:\n                if(media && desviacion) {\n                    setGeneradorInstance(new NormalConvolucion(\n                        media,desviacion,k));\n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            default:\n                setGeneradorInstance(null);\n        }           \n    },[generatorType,a,b,media,desviacion,lambda]);\n\n    useEffect(()=>{\n        const chi = new PruebaChiCuadrado(k,muestra,generadorInstance);\n        chi.calcularChiCuadrado();\n        setChiInstance(chi);\n\n        if(muestra.length<=30 && !(generadorInstance instanceof Poisson)){\n            const ks = new PruebaKS(k,muestra, generadorInstance);\n            ks.calcularsKS();\n            setPruebaKSInstance(ks);\n        }else{\n            setPruebaKSInstance(null);\n        }\n        \n    },[muestra,k]);\n\n    useEffect(()=>{        \n        setMuestra(generarMuestra(n));        \n    }, [n]);   \n\n    useEffect(()=>{\n        if(chiInstance){\n            setRows(chiInstance.data);\n        }else{\n            setRows([]);\n        }\n    },[chiInstance]);\n\n    useEffect(()=>{\n        if(pruebaKSInstance){\n            setKSrows(pruebaKSInstance.data)\n        }else{\n            setKSrows([]);\n        }\n    },[pruebaKSInstance]);\n\n    useEffect(()=>{\n        const auxChartData = {\n            labels:[],\n            datasets:[\n                {\n                    label:'FO',\n                    data:[],\n                    backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',                    \n                    ],\n                    borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    ],\n                    borderWidth: 1,\n                },\n                {\n                    label:'FE',\n                    data:[],\n                    backgroundColor: [\n                    'rgba(54, 162, 235, 0.2)',                    \n                    ],\n                    borderColor: [\n                    'rgba(54, 162, 235, 1)',\n                    ],\n                    borderWidth: 1,\n                }],\n        };\n        rows.forEach(row=>{\n            auxChartData.labels.push(row.mc);\n            auxChartData.datasets[0].data.push(row.fo);\n            auxChartData.datasets[1].data.push(row.fe);\n        });\n        setChartData(auxChartData);\n    },[rows]);\n\n    return (\n    <>\n    <h1>TRABAJO PRÁCTICO N#3</h1>\n    <div \n        style={{\n            width:'48%',\n            display:'inline-block',\n            verticalAlign:'top',\n            textAlign:'right',\n    }}>\n        <div>\n            <label>K:</label>\n            <input \n                type='number' \n                value={k}\n                onChange={(e)=>{\n                    \n                        setK(Number.parseInt(e.target.value));\n                    \n                }}\n                />\n        </div>\n        <div>\n            <label>N:</label>\n            <input \n                type='number' \n                value={n}\n                onChange={(e)=>{\n                    setN(Number.parseInt(e.target.value));\n                }}\n            />\n        </div>\n    </div>\n    <div \n        style={{\n            width:'50%',\n            display:'inline-block',\n            verticalAlign:'top',\n            textAlign:'left',\n            marginLeft:'1em',\n    }}>\n        <label>Tipo Generador:</label>\n        <select\n            onChange={ e => {\n                setGeneratorType(Number.parseInt(e.target.value));\n            }}\n            > \n            <option value='1'>UNIFORME</option>\n            <option value='2'>EXPONENCIAL</option>\n            <option value='3'>NORMAL (Box-Muller)</option>\n            <option value='5'>NORMAL (Convolución)</option>\n            <option value='4'>POISSON</option>\n        </select>\n        \n        { generatorType === 1 &&\n            <>\n                <div>\n                    <label>A:</label>\n                    <input \n                        type='number' \n                        value={a}\n                        onChange={(e)=>{\n                            const aux= e.target.value;\n                            if(isNaN(aux)){\n                                setA(aux);\n                            }else{\n                            setA(Number.parseFloat(aux));\n                            }\n                        }}\n                        />\n                </div>\n                <div>\n                    <label>B:</label>\n                    <input \n                        type='number' \n                        value={b}\n                        onChange={(e)=>{\n                            const aux= e.target.value;\n                            if(isNaN(aux)){\n                                setB(aux);\n                            }else{\n                            setB(Number.parseFloat(aux));\n                            }\n                        }}\n                        />\n                </div>\n            </>\n        }\n        { (generatorType === 3 || generatorType === 5) &&\n            <>\n                <div>\n                    <label>µ:</label>\n                    <input \n                        type='number' \n                        value={media}\n                        onChange={(e)=>{\n                            const aux= e.target.value;\n                            if(isNaN(aux)){\n                                setMedia(aux);\n                            }else{\n                            setMedia(Number.parseFloat(aux));\n                            }\n                        }}\n                        />\n                </div>\n                <div>\n                    <label>δ:</label>\n                    <input \n                        type='number' \n                        value={desviacion}\n                        onChange={(e)=>{\n                            const aux= e.target.value;\n                            if(isNaN(aux)){\n                                setDesviacion(aux);\n                            }else{\n                            setDesviacion(Number.parseFloat(aux));\n                            }\n                        }}\n                        />\n                </div>\n            </>\n        }\n        { (generatorType === 2) &&\n            <>\n                <div>\n                    <label>λ:</label>\n                    <input \n                        type='number' \n                        value={lambda}\n                        onChange={(e)=>{\n                            const aux= e.target.value;\n                            if(isNaN(aux)){\n                                setLambda(aux);\n                            }else{\n                            setLambda(Number.parseFloat(aux));\n                            }\n                        }}\n                        />\n                </div>                \n            </>\n        }\n        { (generatorType === 4) &&\n            <>\n                <div>\n                    <label>λ:</label>\n                    <input \n                        type='number' \n                        value={lambda}\n                        onChange={(e)=>{\n                            const aux= e.target.value;\n                            if(isNaN(aux)){\n                                setLambda(aux);\n                            }else{\n                            setLambda(Number.parseInt(aux));\n                            }\n                        }}\n                        />\n                </div>                \n            </>\n        }\n        { generadorInstance &&\n            <>\n                <div>\n                    <label>GRADOS DE LIBERTAD (v):</label>\n                    <input \n                        type='number'\n                        disabled={true}\n                        value={generadorInstance.getGradosLibertad()}                        \n                        />\n                </div>\n            </>\n        }              \n                    \n        \n    </div>\n    \n    <div>\n        <div style={{\n            width:'48%',\n            display:'inline-block',\n            verticalAlign:'top'\n        }}>\n            <h2>Muestra</h2>\n            <table>\n                <thead>\n                    <th>i</th>\n                    <th>Xi</th>\n                </thead>\n                <tbody>\n                {muestra.map( (item,i) => (\n                    <tr>\n                        <td>{i+1}</td><td>{item}</td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n        <div style={{\n            width:'50%',\n            display:'inline-block',\n            marginLeft:'1em',\n        }}>\n        <h2>Prueba Ji-Cuadrado</h2>\n        <table>\n            <thead>\n                <th>i</th>\n                <th>Min</th>\n                <th>Max</th>\n                <th>MC</th>\n                <th>FO</th>\n                <th>FE</th>\n                <th>FO-FE</th>\n                <th>(FO-FE)^2</th>\n                <th>(FO-FE)^2/FE</th>\n                <th>C = Σ (FO-FE)^2/FE </th>\n            </thead>\n            <tbody>\n                {rows.map((row,i)=>(<tr>\n                    <td>{i+1}</td>\n                    <td>{row.min}</td>\n                    <td>{row.max}</td>\n                    <td>{row.mc}</td>\n                    <td>{row.fo}</td>\n                    <td>{row.fe}</td>\n                    <td>{row.col1}</td>\n                    <td>{row.col2}</td>\n                    <td>{row.col3}</td>\n                    <td>{row.c}</td>\n                </tr>))}\n            </tbody>\n        </table>\n        <br></br>\n        <h2>Prueba Kolmogorov-Smirnov</h2>\n        <table>\n            <thead>\n                <th>i</th>\n                <th>Min</th>\n                <th>Max</th>\n                <th>MC</th>\n                <th>FO</th>\n                <th>FE</th>\n                <th>P(FO)</th>\n                <th>P(FE)</th>\n                <th>P(FO)ac</th>\n                <th>P(Fe)ac</th>\n                <th>|P(FO)ac-P(FE)ac|</th>\n                <th>Max(|P(FO)ac-P(FE)ac|)</th>\n            </thead>\n            <tbody>\n                {ksRows.map((row,i)=>(<tr>\n                    <td>{i+1}</td>\n                    <td>{row.min}</td>\n                    <td>{row.max}</td>\n                    <td>{row.mc}</td>\n                    <td>{row.fo}</td>\n                    <td>{row.fe}</td>\n                    <td>{row.pfo}</td>\n                    <td>{row.pfe}</td>\n                    <td>{row.pfo_ac}</td>\n                    <td>{row.pfe_ac}</td>\n                    <td>{row.resta_probabilidades_acumuladas}</td>\n                    <td>{row.maximo_resta}</td>\n                </tr>))}\n            </tbody>\n        </table>\n        <br></br>\n        <h2>Histograma</h2>\n        <Bar data={chartData}/>\n        </div>\n    </div>\n    </>);\n}\n\nexport default TP3;","import logo from './logo.svg';\nimport './App.css';\nimport TP3 from './pages/TP3';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TP3 />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}