{"version":3,"sources":["logo.svg","services/PruebaChiCuadrado.js","services/Generadores.js","pages/TP3.js","App.js","reportWebVitals.js","index.js"],"names":["PruebaChiCuadrado","numIntervalos","muestra","generador","confianza","generarIntervalos","length","paso","i","min","parseFloat","toFixed","max","mc","data","push","getLimites","minLimite","contarFrecuenciaMuestra","counter","calcularFrecuenciaEsperada","x","intervaloLength","densidad","getDensidad","calcularColumnas","forEach","row","fo","fe","aux1","aux2","Math","pow","aux3","c","getGradosDeLibertad","calcularChiCuadrado","verificarChiCuadrado","this","Uniforme","a","b","k","calcularRandom","random","getMedia","getVarianza","getGradosLibertad","Exponencial","lambda","log","E","Normal","media","desviacion","sqrt","PI","NormalBoxMuller","convolucion","r1","r2","cos","sin","NormalConvolucion","generarDatosMuestraUniforme","muestraUniforme","sumatoriaMuestraUniforme","index","numAleatorio","sumatoria","Poisson","p","factorialize","num","TP3","useState","setK","n","setN","setMuestra","chiInstance","setChiInstance","rows","setRows","chartData","setChartData","generatorType","setGeneratorType","setA","setB","setMedia","setDesviacion","setLambda","generadorInstance","setGeneradorInstance","useEffect","chi","aux","randomNumber","generarMuestra","auxChartData","labels","datasets","label","backgroundColor","borderColor","borderWidth","style","width","display","verticalAlign","textAlign","type","value","onChange","e","Number","parseInt","target","marginLeft","disabled","map","item","col1","col2","col3","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6133fc6.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","class PruebaChiCuadrado{\n    constructor(numIntervalos, muestra, generador ,confianza=0.95){\n        this.numIntervalos=numIntervalos;\n        this.muestra = muestra;\n        this.confianza = confianza;\n        this.generador = generador;\n        this.data = [];\n    }\n\n    generarIntervalos = () => {\n        if (!this.generador && this.muestra.length>0){\n            const paso = 1/this.numIntervalos;\n            for(let i=0;i<this.numIntervalos;i++){\n                const min = parseFloat((i*paso).toFixed(4));\n                const max = parseFloat(((i+1)*paso).toFixed(4));\n                const mc = parseFloat(((min+max)/2).toFixed(4));\n                this.data.push({\n                    min,\n                    max,\n                    mc,\n                })\n            }\n        } else if(this.generador && this.muestra.length){\n            const [minLimite,maxLimite] = this.generador.getLimites(this.muestra);\n            const paso = (maxLimite-minLimite)/this.numIntervalos;\n            for(let i=0;i<this.numIntervalos;i++){\n                let min = null;\n                if (i===0) {\n                    min = parseFloat((minLimite).toFixed(4));\n                } else {\n                    min = this.data[i-1].max;\n                }\n                const max = parseFloat((min+paso).toFixed(4));\n                const mc = parseFloat(((min+max)/2).toFixed(4));\n                this.data.push({\n                    min,\n                    max,\n                    mc,\n                })\n            }\n        } else {\n            this.data = [];\n        }\n    }\n\n    contarFrecuenciaMuestra = (min,max) => {\n        let counter = 0;\n        for(let i=0;i<this.muestra.length;i++){\n            if(this.muestra[i]>=min && this.muestra[i]<max){\n                counter+=1;\n            }\n        }\n        return counter;\n    }\n\n    calcularFrecuenciaEsperada = (x,intervaloLength)=>{\n        if (this.generador) {\n            const densidad = this.generador.getDensidad(x);\n            return parseFloat((densidad*intervaloLength*this.muestra.length).toFixed(4));\n        }\n        return parseFloat((this.muestra.length/this.numIntervalos).toFixed(4));\n    }\n\n    calcularColumnas = () => {\n        this.data.forEach((row,i)=>{\n            const fo = this.contarFrecuenciaMuestra(row.min,row.max);\n            const fe = this.calcularFrecuenciaEsperada(row.mc, row.max-row.min);\n            const aux1 = parseFloat((fo-fe).toFixed(4));\n            const aux2 = parseFloat((Math.pow(aux1,2)).toFixed(4));\n            const aux3 = fe!=0?parseFloat((aux2/fe).toFixed(4)):0;\n            const c = i == 0 ? aux3 : parseFloat((this.data[i-1].c+aux3).toFixed(4));\n            row['fo']= fo;\n            row['fe'] = fe;\n            row['col1'] = aux1;\n            row['col2'] = aux2;\n            row['col3'] = aux3;\n            row['c'] = c;\n        });\n    }\n\n    getGradosDeLibertad = ()=>{\n        return this.numIntervalos-1;\n    }\n\n    calcularChiCuadrado = ()=>{\n        this.generarIntervalos();\n        this.calcularColumnas();\n    }\n\n    verificarChiCuadrado = () => {\n        return {};\n    }  \n\n}\n\nexport {PruebaChiCuadrado}","class CongruencialMixto {\n    \n    constructor(x0,k,g,c){\n        this.a = this.calcularA(k);\n        this.m = this.calcularM(g);\n        this.c = c;\n        this.x0 = x0;\n    }\n\n    calcularA = k => {\n        return 4*k+1;\n    }\n\n    calcularM = g => {\n        return Math.pow(2,g);\n    }\n\n    calcularNextXi = (xi) => {\n        console.log(xi);\n        return (this.a*xi+this.c)%this.m;\n    }\n\n    calcularRandom = (xi) => {\n        return xi/(this.m-1);\n    }\n    \n    toString = ()=>{\n        return this.a+' '+this.m+' '+this.c;\n    }\n}\n\nclass CongruencialMultiplicativo {\n    \n    constructor(x0,k,g){\n        this.a = this.calcularA(k);\n        this.m = this.calcularM(g);\n        this.x0 = x0;\n    }\n\n    calcularA = k => {\n        return 8*k+3;\n    }\n\n    calcularM = g => {\n        return Math.pow(2,g);\n    }\n\n    calcularNextXi = (xi) => {\n        return (this.a*xi)%this.m;\n    }\n\n    calcularRandom = (xi) => {\n        return xi/(this.m-1);\n    }\n\n    toString = ()=>{\n        return this.a+' '+this.m;\n    }\n    \n}\n\nclass Uniforme {\n    constructor(a,b,k){\n        this.a=a;\n        this.b=b;\n        this.k=k;\n    }\n\n    calcularRandom = ()=>{\n        return parseFloat((this.a+Math.random()*(this.b-this.a)).toFixed(4));\n    }\n\n    getMedia = ()=>{\n        return parseFloat(((this.a+this.b)/2).toFixed(4));\n    }\n\n    getVarianza = ()=>{\n        return parseFloat((Math.pow(this.b-this.a,2)/12).toFixed(4));\n    }\n\n    getDensidad = ()=>{\n        return parseFloat((1/(this.b-this.a)).toFixed(4));\n    }\n\n    getLimites = ()=>{\n        return [this.a,this.b]\n    }\n\n    getGradosLibertad = ()=>{\n        return this.k-1;\n    }\n}\n\nclass Exponencial {\n    constructor(lambda,k){\n        this.lambda = lambda;\n        this.k = k;\n    }\n\n    calcularRandom = ()=>{\n        return parseFloat((-1/this.lambda)*Math.log(1-Math.random()).toFixed(4));\n    }\n\n    getMedia = () => {\n        return parseFloat((1/this.lambda).toFixed(4));\n    }\n\n    getVarianza = () => {\n        return parseFloat((1/Math.pow(this.lambda,2)).toFixed(4));\n    }\n\n    getDensidad = (x)=> {\n        return parseFloat((this.lambda*Math.pow(Math.E,(-1*this.lambda*x))).toFixed(4));\n    }\n\n    getLimites = ()=>{\n        return [0,1];\n    }\n\n    getGradosLibertad = ()=>{\n        return this.k-2;\n    }\n}\n\nclass Normal {\n    constructor(media,desviacion,k){\n        this.media = media;\n        this.desviacion = desviacion\n        this.k = k;\n    }    \n\n    getMedia = () => {\n        return this.media;\n    }\n\n    getVarianza = () => {\n        return parseFloat((Math.pow(this.desviacion,2)).toFixed(4));\n    }\n\n    getDensidad = (x)=> {\n        return parseFloat((1/(this.desviacion*Math.sqrt(2*Math.PI)))*Math.pow(Math.E,(-0.5*Math.pow((x-this.media)/this.desviacion,2))).toFixed(4));\n    }\n\n    getLimites = (muestra)=>{\n        return [Math.min(...muestra), Math.max(...muestra)]\n    }\n\n    getGradosLibertad = ()=>{\n        return this.k-3;\n    }\n\n}\n\nclass NormalBoxMuller extends Normal {    \n\n    calcularRandom = ()=>{\n        if(this.convolucion){\n            \n        }\n        const r1 = Math.random();\n        const r2 = Math.random();\n        const n1 = parseFloat((Math.sqrt(-2*Math.log(r1))*Math.cos(2*Math.PI*r2)*this.desviacion+this.media).toFixed(4));\n        const n2 = parseFloat((Math.sqrt(-2*Math.log(r1))*Math.sin(2*Math.PI*r2)*this.desviacion+this.media).toFixed(4));\n        return [n1,n2];\n    }\n}\nclass NormalConvolucion extends Normal {\n\n    generarDatosMuestraUniforme = ()=>{\n        let muestraUniforme = [];\n        let sumatoriaMuestraUniforme = 0;\n        for (let index = 0; index < 12; index++) {\n            const numAleatorio = Math.random()\n            muestraUniforme.push(numAleatorio);\n            sumatoriaMuestraUniforme+= numAleatorio         \n        }\n        return [muestraUniforme, sumatoriaMuestraUniforme];\n    }\n\n    calcularRandom = ()=>{\n        const [muestra, sumatoria] = this.generarDatosMuestraUniforme();\n        return parseFloat(((sumatoria-6)*this.desviacion+this.media).toFixed(4));\n    }\n\n}\nclass Poisson {\n    constructor(lambda,k){\n        this.lambda = lambda;\n        this.k = k;\n    }\n\n    calcularRandom = ()=>{\n        /*\n            P = 1;\n            X = -1;\n            A = e-λ;\n            Hacer\n            {\n            Generar U = RND(0,1);\n            P = P * U;\n            X = X + 1;\n            } mientras (P >= A);\n            Devolver X;\n        */\n       let p = 1;\n       let x = -1;\n       let a = Math.pow(Math.E,-1*this.lambda);\n       do {\n        const u = Math.random();\n        p = p*u;\n        x = x+1;\n       } while (p>=a);\n\n       return x;\n    }\n\n    getMedia = () => {\n        return parseFloat((this.lambda).toFixed(4));\n    }\n\n    getVarianza = () => {\n        return parseFloat((this.lambda).toFixed(4));\n    }\n\n    getDensidad = (x)=> {\n        return parseFloat(((Math.pow(this.lambda,x) * Math.pow(Math.E,-1*this.lambda))/ this.factorialize(x)).toFixed(4));\n    }\n\n    factorialize = (num) => {\n        if (num === 0 || num === 1)\n          return 1;\n        for (var i = num - 1; i >= 1; i--) {\n          num *= i;\n        }\n        return num;\n    }\n\n    getLimites = (muestra)=>{\n       return [Math.min(...muestra), Math.max(...muestra)]\n    }\n\n    getGradosLibertad = ()=>{\n        return this.k-2;\n    }\n}\n\nexport {\n    CongruencialMixto,\n    CongruencialMultiplicativo,\n    Uniforme,\n    Exponencial,\n    NormalBoxMuller,\n    NormalConvolucion,\n    Poisson,\n}","import {useState, useEffect} from 'react';\nimport { PruebaChiCuadrado } from '../services/PruebaChiCuadrado';\nimport { Uniforme, Exponencial, NormalBoxMuller, NormalConvolucion,Poisson } from '../services/Generadores';\nimport { Bar } from 'react-chartjs-2';\n\nconst TP3 = () => {\n    const [k,setK] = useState(10);\n    const [n,setN] = useState(0);\n    const [muestra,setMuestra] = useState([]);\n\n    const [chiInstance, setChiInstance] = useState();\n    const [rows,setRows] = useState([]);\n    const [chartData, setChartData] = useState({});\n\n\n    const [generatorType, setGeneratorType] = useState(1);\n\n    const [a, setA] = useState();\n    const [b, setB] = useState();\n    const [media, setMedia] = useState();\n    const [desviacion, setDesviacion] = useState();\n    const [lambda, setLambda] = useState();\n\n    const [generadorInstance, setGeneradorInstance] = useState(null);\n\n    const generarMuestra = () => {\n        const aux = [];        \n        if(generadorInstance){\n            if(generatorType===3){\n                for( let i= 0;i<n;i=i+2){\n                    const [r1,r2] = generadorInstance.calcularRandom();    \n                    aux.push(r1);\n                    aux.push(r2)\n                }\n            }else{\n                for( let i= 0;i<n;i++){\n                    const randomNumber = generadorInstance.calcularRandom();    \n                    aux.push(randomNumber);\n                }\n            }\n        }\n        return aux;\n    };\n\n    useEffect(()=>{\n        setN(0);\n        setChiInstance(null);\n        switch(generatorType) {\n            case 1:\n                if(a && b){\n                    setGeneradorInstance(new Uniforme(a,b,k));\n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            case 2:\n                if(lambda) {\n                    setGeneradorInstance(new Exponencial(lambda,k));                \n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            case 3:\n                if(media && desviacion) {\n                setGeneradorInstance(new NormalBoxMuller(media,desviacion,k));\n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            case 4:\n                if(lambda) {\n                    setGeneradorInstance(new Poisson(lambda,k));\n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            case 5:\n                if(media && desviacion) {\n                    setGeneradorInstance(new NormalConvolucion(\n                        media,desviacion,k));\n                } else {\n                    setGeneradorInstance(null);\n                }\n                break;\n            default:\n                setGeneradorInstance(null);\n        }           \n    },[generatorType,a,b,media,desviacion,lambda]);\n\n    useEffect(()=>{\n        const chi = new PruebaChiCuadrado(k,muestra,generadorInstance);\n        chi.calcularChiCuadrado();\n        setChiInstance(chi);\n    },[muestra,k]);\n\n    useEffect(()=>{        \n        setMuestra(generarMuestra(n));        \n    }, [n]);   \n\n    useEffect(()=>{\n        if(chiInstance){\n            setRows(chiInstance.data);\n        }\n    },[chiInstance]);\n\n    useEffect(()=>{\n        const auxChartData = {\n            labels:[],\n            datasets:[\n                {\n                    label:'FO',\n                    data:[],\n                    backgroundColor: [\n                    'rgba(255, 99, 132, 0.2)',                    \n                    ],\n                    borderColor: [\n                    'rgba(255, 99, 132, 1)',\n                    ],\n                    borderWidth: 1,\n                },\n                {\n                    label:'FE',\n                    data:[],\n                    backgroundColor: [\n                    'rgba(54, 162, 235, 0.2)',                    \n                    ],\n                    borderColor: [\n                    'rgba(54, 162, 235, 1)',\n                    ],\n                    borderWidth: 1,\n                }],\n        };\n        rows.forEach(row=>{\n            auxChartData.labels.push(row.mc);\n            auxChartData.datasets[0].data.push(row.fo);\n            auxChartData.datasets[1].data.push(row.fe);\n        });\n        setChartData(auxChartData);\n    },[rows]);\n\n    return (\n    <>\n    <h1>TRABAJO PRÁCTICO N#3</h1>\n    <div \n        style={{\n            width:'48%',\n            display:'inline-block',\n            verticalAlign:'top',\n            textAlign:'right',\n    }}>\n        <div>\n            <label>K:</label>\n            <input \n                type='number' \n                value={k}\n                onChange={(e)=>{\n                    setK(Number.parseInt(e.target.value));\n                }}\n                />\n        </div>\n        <div>\n            <label>N:</label>\n            <input \n                type='number' \n                value={n}\n                onChange={(e)=>{\n                    setN(Number.parseInt(e.target.value));\n                }}\n            />\n        </div>\n    </div>\n    <div \n        style={{\n            width:'50%',\n            display:'inline-block',\n            verticalAlign:'top',\n            textAlign:'left',\n            marginLeft:'1em',\n    }}>\n        <label>Tipo Generador:</label>\n        <select\n            onChange={ e => {\n                setGeneratorType(Number.parseInt(e.target.value));\n            }}\n            > \n            <option value='1'>UNIFORME</option>\n            <option value='2'>EXPONENCIAL</option>\n            <option value='3'>NORMAL (Box-Muller)</option>\n            <option value='5'>NORMAL (Convolución)</option>\n            <option value='4'>POISSON</option>\n        </select>\n        \n        { generatorType === 1 &&\n            <>\n                <div>\n                    <label>A:</label>\n                    <input \n                        type='number' \n                        value={a}\n                        onChange={(e)=>{\n                            setA(Number.parseInt(e.target.value));\n                        }}\n                        />\n                </div>\n                <div>\n                    <label>B:</label>\n                    <input \n                        type='number' \n                        value={b}\n                        onChange={(e)=>{\n                            setB(Number.parseInt(e.target.value));\n                        }}\n                        />\n                </div>\n            </>\n        }\n        { (generatorType === 3 || generatorType === 5) &&\n            <>\n                <div>\n                    <label>µ:</label>\n                    <input \n                        type='number' \n                        value={media}\n                        onChange={(e)=>{\n                            setMedia(Number.parseInt(e.target.value));\n                        }}\n                        />\n                </div>\n                <div>\n                    <label>δ:</label>\n                    <input \n                        type='number' \n                        value={desviacion}\n                        onChange={(e)=>{\n                            const aux = Number.parseFloat(e.target.value)\n                            setDesviacion(aux);\n                        }}\n                        />\n                </div>\n            </>\n        }\n        { (generatorType === 2 || generatorType === 4) &&\n            <>\n                <div>\n                    <label>λ:</label>\n                    <input \n                        type='number' \n                        value={lambda}\n                        onChange={(e)=>{\n                            setLambda(Number.parseInt(e.target.value));\n                        }}\n                        />\n                </div>                \n            </>\n        }\n        { generadorInstance &&\n            <>\n                <div>\n                    <label>GRADOS DE LIBERTAD (v):</label>\n                    <input \n                        type='number'\n                        disabled={true}\n                        value={generadorInstance.getGradosLibertad()}                        \n                        />\n                </div>\n            </>\n        }              \n                    \n        \n    </div>\n    \n    <div>\n        <div style={{\n            width:'48%',\n            display:'inline-block',\n            verticalAlign:'top'\n        }}>\n            <h2>Muestra</h2>\n            <table>\n                <thead>\n                    <th>i</th>\n                    <th>Xi</th>\n                </thead>\n                <tbody>\n                {muestra.map( (item,i) => (\n                    <tr>\n                        <td>{i+1}</td><td>{item}</td>\n                    </tr>))}\n                </tbody>\n            </table>\n        </div>\n        <div style={{\n            width:'50%',\n            display:'inline-block',\n            marginLeft:'1em',\n        }}>\n        <table>\n            <thead>\n                <th>i</th>\n                <th>Min</th>\n                <th>Max</th>\n                <th>MC</th>\n                <th>FO</th>\n                <th>FE</th>\n                <th>FO-FE</th>\n                <th>(FO-FE)^2</th>\n                <th>(FO-FE)^2/FE</th>\n                <th>C = Σ (FO-FE)^2/FE </th>\n            </thead>\n            <tbody>\n                {rows.map((row,i)=>(<tr>\n                    <td>{i+1}</td>\n                    <td>{row.min}</td>\n                    <td>{row.max}</td>\n                    <td>{row.mc}</td>\n                    <td>{row.fo}</td>\n                    <td>{row.fe}</td>\n                    <td>{row.col1}</td>\n                    <td>{row.col2}</td>\n                    <td>{row.col3}</td>\n                    <td>{row.c}</td>\n                </tr>))}\n            </tbody>\n        </table>\n        <Bar data={chartData}/>\n        </div>\n    </div>\n    </>);\n}\n\nexport default TP3;","import logo from './logo.svg';\nimport './App.css';\nimport TP3 from './pages/TP3';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TP3 />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}